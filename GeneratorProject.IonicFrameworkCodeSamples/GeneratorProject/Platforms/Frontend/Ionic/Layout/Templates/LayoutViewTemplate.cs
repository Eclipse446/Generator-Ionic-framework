// ------------------------------------------------------------------------------
// <auto-generated>
//     Ce code a été généré par un outil.
//     Version du runtime : 15.0.0.0
//  
//     Les changements apportés à ce fichier peuvent provoquer un comportement incorrect et seront perdues si
//     le code est régénéré.
// </auto-generated>
// ------------------------------------------------------------------------------
namespace GeneratorProject.Platforms.Frontend.Ionic
{
    using System.Linq;
    using System.Text;
    using System.Collections.Generic;
    using Mobioos.Scaffold.BaseGenerators.TextTemplating;
    using Mobioos.Scaffold.BaseGenerators.Helpers;
    using Mobioos.Foundation.Jade.Models;
    using System;
    
    /// <summary>
    /// Class to produce the template output
    /// </summary>
    
    #line 1 "C:\Users\PC\Documents\Gits\Ionic-framework\GeneratorProject.IonicFrameworkCodeSamples\GeneratorProject\Platforms\Frontend\Ionic\Layout\Templates\LayoutViewTemplate.tt"
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.VisualStudio.TextTemplating", "15.0.0.0")]
    public partial class LayoutViewTemplate : TemplateBase
    {
#line hidden
        /// <summary>
        /// Create the template output
        /// </summary>
        public override string TransformText()
        {
            this.Write(@"
<!--
  You should add your licence here, here is an example :

  SonarQube, open source software quality management tool.
  Copyright (C) 2008-2013 SonarSource
  mailto:contact AT sonarsource DOT com

  SonarQube is free software; you can redistribute it and/or
  modify it under the terms of the GNU Lesser General Public
  License as published by the Free Software Foundation; either
  version 3 of the License, or (at your option) any later version.
 
  SonarQube is distributed in the hope that it will be useful,
  but WITHOUT ANY WARRANTY; without even the implied warranty of
  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
  Lesser General Public License for more details.
 
  You should have received a copy of the GNU Lesser General Public License
  along with this program; if not, write to the Free Software Foundation,
  Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.
-->
");
            
            #line 23 "C:\Users\PC\Documents\Gits\Ionic-framework\GeneratorProject.IonicFrameworkCodeSamples\GeneratorProject\Platforms\Frontend\Ionic\Layout\Templates\LayoutViewTemplate.tt"

    if (_smartAppTitle != null && _layout != null)
    {

            
            #line default
            #line hidden
            this.Write("<!--\r\n  That header enables the integration of a menu in the page.\r\n  It should b" +
                    "e a combinaison of a concern designed as a global\r\n  menu and a specific menu de" +
                    "fined in the current concern as\r\n  isVisibleInMenu.\r\n-->\r\n<ion-header>\r\n  <ion-n" +
                    "avbar>\r\n");
            
            #line 35 "C:\Users\PC\Documents\Gits\Ionic-framework\GeneratorProject.IonicFrameworkCodeSamples\GeneratorProject\Platforms\Frontend\Ionic\Layout\Templates\LayoutViewTemplate.tt"

        if (_menu.AsEnumerable() != null && _menu.AsEnumerable().Count() > 0)
        {

            
            #line default
            #line hidden
            this.Write("    <button ion-button icon-only menuToggle>\r\n      <ion-icon name=\"menu\"></ion-i" +
                    "con>\r\n    </button>\r\n");
            
            #line 42 "C:\Users\PC\Documents\Gits\Ionic-framework\GeneratorProject.IonicFrameworkCodeSamples\GeneratorProject\Platforms\Frontend\Ionic\Layout\Templates\LayoutViewTemplate.tt"

        }

            
            #line default
            #line hidden
            this.Write("    <ion-title text-center>\r\n");
            
            #line 46 "C:\Users\PC\Documents\Gits\Ionic-framework\GeneratorProject.IonicFrameworkCodeSamples\GeneratorProject\Platforms\Frontend\Ionic\Layout\Templates\LayoutViewTemplate.tt"

        if (_languages.AsEnumerable() != null && _languages.AsEnumerable().Count() > 0)
        {

            
            #line default
            #line hidden
            this.Write("        {{ \"applicationTitle\" | translate }}\r\n");
            
            #line 51 "C:\Users\PC\Documents\Gits\Ionic-framework\GeneratorProject.IonicFrameworkCodeSamples\GeneratorProject\Platforms\Frontend\Ionic\Layout\Templates\LayoutViewTemplate.tt"
  
        }
        else
        {

            
            #line default
            #line hidden
            this.Write("        ");
            
            #line 56 "C:\Users\PC\Documents\Gits\Ionic-framework\GeneratorProject.IonicFrameworkCodeSamples\GeneratorProject\Platforms\Frontend\Ionic\Layout\Templates\LayoutViewTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(TextConverter.PascalCase(_smartAppTitle)));
            
            #line default
            #line hidden
            this.Write("\r\n");
            
            #line 57 "C:\Users\PC\Documents\Gits\Ionic-framework\GeneratorProject.IonicFrameworkCodeSamples\GeneratorProject\Platforms\Frontend\Ionic\Layout\Templates\LayoutViewTemplate.tt"

        }

            
            #line default
            #line hidden
            this.Write("    </ion-title>\r\n");
            
            #line 61 "C:\Users\PC\Documents\Gits\Ionic-framework\GeneratorProject.IonicFrameworkCodeSamples\GeneratorProject\Platforms\Frontend\Ionic\Layout\Templates\LayoutViewTemplate.tt"

        if (_languages.AsEnumerable() != null && _languages.AsEnumerable().Count() > 0)
        {

            
            #line default
            #line hidden
            this.Write("    <ion-buttons end>\r\n      <button ion-button icon-only (click)=\"onLanguage()\">" +
                    "\r\n        <ion-icon name=\"settings\"></ion-icon>\r\n      </button>\r\n    </ion-butt" +
                    "ons>\r\n");
            
            #line 70 "C:\Users\PC\Documents\Gits\Ionic-framework\GeneratorProject.IonicFrameworkCodeSamples\GeneratorProject\Platforms\Frontend\Ionic\Layout\Templates\LayoutViewTemplate.tt"

        }

            
            #line default
            #line hidden
            this.Write("  </ion-navbar>\r\n</ion-header>\r\n\r\n<ion-content padding>\r\n");
            
            #line 77 "C:\Users\PC\Documents\Gits\Ionic-framework\GeneratorProject.IonicFrameworkCodeSamples\GeneratorProject\Platforms\Frontend\Ionic\Layout\Templates\LayoutViewTemplate.tt"

        if (_layout.Actions.AsEnumerable() != null)
        {

            
            #line default
            #line hidden
            this.Write("  <ion-list no-lines>\r\n");
            
            #line 82 "C:\Users\PC\Documents\Gits\Ionic-framework\GeneratorProject.IonicFrameworkCodeSamples\GeneratorProject\Platforms\Frontend\Ionic\Layout\Templates\LayoutViewTemplate.tt"

            foreach (ActionInfo action in _layout.Actions.AsEnumerable())
            {
                if (action != null && action.Id != null)
                {

            
            #line default
            #line hidden
            this.Write("    <ion-item>\r\n      <button ion-button (click)=\"on");
            
            #line 89 "C:\Users\PC\Documents\Gits\Ionic-framework\GeneratorProject.IonicFrameworkCodeSamples\GeneratorProject\Platforms\Frontend\Ionic\Layout\Templates\LayoutViewTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(TextConverter.PascalCase(action.Id)));
            
            #line default
            #line hidden
            this.Write("()\">\r\n");
            
            #line 90 "C:\Users\PC\Documents\Gits\Ionic-framework\GeneratorProject.IonicFrameworkCodeSamples\GeneratorProject\Platforms\Frontend\Ionic\Layout\Templates\LayoutViewTemplate.tt"

                    if (_languages.AsEnumerable() != null && _languages.AsEnumerable().Count() > 0)
                    {

            
            #line default
            #line hidden
            this.Write("        <!-- Generic call to component\'s methods, should be used differenty -->\r\n" +
                    "        on{{ \"");
            
            #line 95 "C:\Users\PC\Documents\Gits\Ionic-framework\GeneratorProject.IonicFrameworkCodeSamples\GeneratorProject\Platforms\Frontend\Ionic\Layout\Templates\LayoutViewTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(TextConverter.CamelCase(_concern.Id)));
            
            #line default
            #line hidden
            this.Write(".");
            
            #line 95 "C:\Users\PC\Documents\Gits\Ionic-framework\GeneratorProject.IonicFrameworkCodeSamples\GeneratorProject\Platforms\Frontend\Ionic\Layout\Templates\LayoutViewTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(TextConverter.CamelCase(_layout.Id)));
            
            #line default
            #line hidden
            this.Write("Layout");
            
            #line 95 "C:\Users\PC\Documents\Gits\Ionic-framework\GeneratorProject.IonicFrameworkCodeSamples\GeneratorProject\Platforms\Frontend\Ionic\Layout\Templates\LayoutViewTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(TextConverter.PascalCase(action.Id)));
            
            #line default
            #line hidden
            this.Write("Action\" | translate }}\r\n");
            
            #line 96 "C:\Users\PC\Documents\Gits\Ionic-framework\GeneratorProject.IonicFrameworkCodeSamples\GeneratorProject\Platforms\Frontend\Ionic\Layout\Templates\LayoutViewTemplate.tt"
  
                    }
                    else 
                    {

            
            #line default
            #line hidden
            this.Write("        <!-- Generic call to component\'s methods, should be used differenty -->\r\n" +
                    "        on");
            
            #line 102 "C:\Users\PC\Documents\Gits\Ionic-framework\GeneratorProject.IonicFrameworkCodeSamples\GeneratorProject\Platforms\Frontend\Ionic\Layout\Templates\LayoutViewTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(TextConverter.PascalCase(action.Id)));
            
            #line default
            #line hidden
            this.Write(" \r\n");
            
            #line 103 "C:\Users\PC\Documents\Gits\Ionic-framework\GeneratorProject.IonicFrameworkCodeSamples\GeneratorProject\Platforms\Frontend\Ionic\Layout\Templates\LayoutViewTemplate.tt"

                    }
                }

            
            #line default
            #line hidden
            this.Write("      </button>\r\n    </ion-item>\r\n");
            
            #line 109 "C:\Users\PC\Documents\Gits\Ionic-framework\GeneratorProject.IonicFrameworkCodeSamples\GeneratorProject\Platforms\Frontend\Ionic\Layout\Templates\LayoutViewTemplate.tt"

            }

            
            #line default
            #line hidden
            this.Write("  </ion-list>\r\n");
            
            #line 113 "C:\Users\PC\Documents\Gits\Ionic-framework\GeneratorProject.IonicFrameworkCodeSamples\GeneratorProject\Platforms\Frontend\Ionic\Layout\Templates\LayoutViewTemplate.tt"

        }

            
            #line default
            #line hidden
            this.Write("</ion-content>\r\n");
            
            #line 117 "C:\Users\PC\Documents\Gits\Ionic-framework\GeneratorProject.IonicFrameworkCodeSamples\GeneratorProject\Platforms\Frontend\Ionic\Layout\Templates\LayoutViewTemplate.tt"

    }

            
            #line default
            #line hidden
            return this.GenerationEnvironment.ToString();
        }
    }
    
    #line default
    #line hidden
}
