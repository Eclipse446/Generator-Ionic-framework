// ------------------------------------------------------------------------------
// <auto-generated>
//     Ce code a été généré par un outil.
//     Version du runtime : 16.0.0.0
//  
//     Les changements apportés à ce fichier peuvent provoquer un comportement incorrect et seront perdues si
//     le code est régénéré.
// </auto-generated>
// ------------------------------------------------------------------------------
namespace GeneratorProject.Platforms.Frontend.Ionic
{
    using System.Linq;
    using System.Text;
    using System.Collections.Generic;
    using Mobioos.Scaffold.BaseGenerators.TextTemplating;
    using Mobioos.Foundation.Jade.Models;
    using Common.Generator.Framework.Extensions;
    using System;
    
    /// <summary>
    /// Class to produce the template output
    /// </summary>
    
    #line 1 "C:\Users\PC\Documents\Gits\Ionic-framework\GeneratorProject.IonicFrameworkCodeSamples\GeneratorProject\Platforms\Frontend\Ionic\Layout\Templates\LayoutComponentTemplate.tt"
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.VisualStudio.TextTemplating", "16.0.0.0")]
    public partial class LayoutComponentTemplate : TemplateBase
    {
#line hidden
        /// <summary>
        /// Create the template output
        /// </summary>
        public override string TransformText()
        {
            this.Write(@"
/*
 * You should add your licence here, here is an example :
 *
 * SonarQube, open source software quality management tool.
 * Copyright (C) 2008-2013 SonarSource
 * mailto:contact AT sonarsource DOT com
 *
 * SonarQube is free software; you can redistribute it and/or
 * modify it under the terms of the GNU Lesser General Public
 * License as published by the Free Software Foundation; either
 * version 3 of the License, or (at your option) any later version.
 *
 * SonarQube is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
 * Lesser General Public License for more details.
 *
 * You should have received a copy of the GNU Lesser General Public License
 * along with this program; if not, write to the Free Software Foundation,
 * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.
 */
");
            
            #line 23 "C:\Users\PC\Documents\Gits\Ionic-framework\GeneratorProject.IonicFrameworkCodeSamples\GeneratorProject\Platforms\Frontend\Ionic\Layout\Templates\LayoutComponentTemplate.tt"

    if (ConcernId != null
        && Layout != null
        && Layout.Id != null)
    {
        var layout = ConcernId.ToPascalCase() + Layout.Id.ToPascalCase();
        var layoutToLower = $"{ConcernId.ToCamelCase()}-{Layout.Id.ToCamelCase()}";
        var layoutPathToLower = $"{ConcernId.ToCamelCase()}/{Layout.Id.ToCamelCase()}";

            
            #line default
            #line hidden
            this.Write("import { Component } from \'@angular/core\';\r\nimport { IonicPage, NavController");
            
            #line 33 "C:\Users\PC\Documents\Gits\Ionic-framework\GeneratorProject.IonicFrameworkCodeSamples\GeneratorProject\Platforms\Frontend\Ionic\Layout\Templates\LayoutComponentTemplate.tt"
 if (Menu.AsEnumerable() != null && Menu.AsEnumerable().Count() > 0) { 
            
            #line default
            #line hidden
            this.Write(", Events");
            
            #line 33 "C:\Users\PC\Documents\Gits\Ionic-framework\GeneratorProject.IonicFrameworkCodeSamples\GeneratorProject\Platforms\Frontend\Ionic\Layout\Templates\LayoutComponentTemplate.tt"
 } 
            
            #line default
            #line hidden
            this.Write(" } from \'ionic-angular\';\r\n");
            
            #line 34 "C:\Users\PC\Documents\Gits\Ionic-framework\GeneratorProject.IonicFrameworkCodeSamples\GeneratorProject\Platforms\Frontend\Ionic\Layout\Templates\LayoutComponentTemplate.tt"

        if (ViewModels.AsEnumerable() != null
            && ViewModels.AsEnumerable().Count() > 0)
        {
            foreach (var viewModel in ViewModels.AsEnumerable())
            {

            
            #line default
            #line hidden
            this.Write("import { ");
            
            #line 41 "C:\Users\PC\Documents\Gits\Ionic-framework\GeneratorProject.IonicFrameworkCodeSamples\GeneratorProject\Platforms\Frontend\Ionic\Layout\Templates\LayoutComponentTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(viewModel.ToPascalCase()));
            
            #line default
            #line hidden
            this.Write(" } from \'../../../viewModels/");
            
            #line 41 "C:\Users\PC\Documents\Gits\Ionic-framework\GeneratorProject.IonicFrameworkCodeSamples\GeneratorProject\Platforms\Frontend\Ionic\Layout\Templates\LayoutComponentTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(viewModel.ToCamelCase()));
            
            #line default
            #line hidden
            this.Write("\';\r\n");
            
            #line 42 "C:\Users\PC\Documents\Gits\Ionic-framework\GeneratorProject.IonicFrameworkCodeSamples\GeneratorProject\Platforms\Frontend\Ionic\Layout\Templates\LayoutComponentTemplate.tt"

            }
        }

        if (ApiDomainServices.AsEnumerable() != null
            && ApiDomainServices.AsEnumerable().Count() > 0)
        {

            
            #line default
            #line hidden
            this.Write("import { Observable } from \'rxjs\';\r\n");
            
            #line 51 "C:\Users\PC\Documents\Gits\Ionic-framework\GeneratorProject.IonicFrameworkCodeSamples\GeneratorProject\Platforms\Frontend\Ionic\Layout\Templates\LayoutComponentTemplate.tt"

            foreach (var service in ApiDomainServices.AsEnumerable())
            {

            
            #line default
            #line hidden
            this.Write("import { ");
            
            #line 55 "C:\Users\PC\Documents\Gits\Ionic-framework\GeneratorProject.IonicFrameworkCodeSamples\GeneratorProject\Platforms\Frontend\Ionic\Layout\Templates\LayoutComponentTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(service.ToPascalCase()));
            
            #line default
            #line hidden
            this.Write(" } from \'../../../services/");
            
            #line 55 "C:\Users\PC\Documents\Gits\Ionic-framework\GeneratorProject.IonicFrameworkCodeSamples\GeneratorProject\Platforms\Frontend\Ionic\Layout\Templates\LayoutComponentTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(service.ToCamelCase()));
            
            #line default
            #line hidden
            this.Write(".service\';\r\n");
            
            #line 56 "C:\Users\PC\Documents\Gits\Ionic-framework\GeneratorProject.IonicFrameworkCodeSamples\GeneratorProject\Platforms\Frontend\Ionic\Layout\Templates\LayoutComponentTemplate.tt"

            }
        }

        if (Languages.AsEnumerable() != null
            && Languages.AsEnumerable().Count() > 0)
        {

            
            #line default
            #line hidden
            this.Write("import { LanguagePage } from \'../../language/language\';\r\n");
            
            #line 65 "C:\Users\PC\Documents\Gits\Ionic-framework\GeneratorProject.IonicFrameworkCodeSamples\GeneratorProject\Platforms\Frontend\Ionic\Layout\Templates\LayoutComponentTemplate.tt"

        }

            
            #line default
            #line hidden
            this.Write("\r\n/**\r\n * class: ");
            
            #line 70 "C:\Users\PC\Documents\Gits\Ionic-framework\GeneratorProject.IonicFrameworkCodeSamples\GeneratorProject\Platforms\Frontend\Ionic\Layout\Templates\LayoutComponentTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(layout));
            
            #line default
            #line hidden
            this.Write(".\r\n");
            
            #line 71 "C:\Users\PC\Documents\Gits\Ionic-framework\GeneratorProject.IonicFrameworkCodeSamples\GeneratorProject\Platforms\Frontend\Ionic\Layout\Templates\LayoutComponentTemplate.tt"

        if (Layout.Description != null)
        {

            
            #line default
            #line hidden
            this.Write(" * ");
            
            #line 75 "C:\Users\PC\Documents\Gits\Ionic-framework\GeneratorProject.IonicFrameworkCodeSamples\GeneratorProject\Platforms\Frontend\Ionic\Layout\Templates\LayoutComponentTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(Layout.Description));
            
            #line default
            #line hidden
            this.Write(".\r\n * This is the component of that layout.\r\n * This component is generated from " +
                    "Concerns domain.\r\n");
            
            #line 78 "C:\Users\PC\Documents\Gits\Ionic-framework\GeneratorProject.IonicFrameworkCodeSamples\GeneratorProject\Platforms\Frontend\Ionic\Layout\Templates\LayoutComponentTemplate.tt"

        }
        else
        {

            
            #line default
            #line hidden
            this.Write(" * You should add a description of your\r\n * layout\'s component here.\r\n * This is " +
                    "the component of the current layout.\r\n * This component is generated from Concer" +
                    "ns domain.\r\n");
            
            #line 87 "C:\Users\PC\Documents\Gits\Ionic-framework\GeneratorProject.IonicFrameworkCodeSamples\GeneratorProject\Platforms\Frontend\Ionic\Layout\Templates\LayoutComponentTemplate.tt"

        }

            
            #line default
            #line hidden
            this.Write(" */\r\n@IonicPage({\r\n  name: \'");
            
            #line 92 "C:\Users\PC\Documents\Gits\Ionic-framework\GeneratorProject.IonicFrameworkCodeSamples\GeneratorProject\Platforms\Frontend\Ionic\Layout\Templates\LayoutComponentTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(layoutToLower));
            
            #line default
            #line hidden
            this.Write("\',\r\n  segment: \'");
            
            #line 93 "C:\Users\PC\Documents\Gits\Ionic-framework\GeneratorProject.IonicFrameworkCodeSamples\GeneratorProject\Platforms\Frontend\Ionic\Layout\Templates\LayoutComponentTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(layoutPathToLower));
            
            #line default
            #line hidden
            this.Write("\'\r\n})\r\n@Component({\r\n  selector: \'");
            
            #line 96 "C:\Users\PC\Documents\Gits\Ionic-framework\GeneratorProject.IonicFrameworkCodeSamples\GeneratorProject\Platforms\Frontend\Ionic\Layout\Templates\LayoutComponentTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(layoutToLower));
            
            #line default
            #line hidden
            this.Write("\',\r\n  templateUrl: \'");
            
            #line 97 "C:\Users\PC\Documents\Gits\Ionic-framework\GeneratorProject.IonicFrameworkCodeSamples\GeneratorProject\Platforms\Frontend\Ionic\Layout\Templates\LayoutComponentTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(layoutToLower));
            
            #line default
            #line hidden
            this.Write(".html\'\r\n})\r\nexport class ");
            
            #line 99 "C:\Users\PC\Documents\Gits\Ionic-framework\GeneratorProject.IonicFrameworkCodeSamples\GeneratorProject\Platforms\Frontend\Ionic\Layout\Templates\LayoutComponentTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(layout));
            
            #line default
            #line hidden
            this.Write(" {\r\n");
            
            #line 100 "C:\Users\PC\Documents\Gits\Ionic-framework\GeneratorProject.IonicFrameworkCodeSamples\GeneratorProject\Platforms\Frontend\Ionic\Layout\Templates\LayoutComponentTemplate.tt"

        if (Menu.AsEnumerable() != null
            && Menu.AsEnumerable().Count() > 0)
        {

            
            #line default
            #line hidden
            this.Write("  public _menu;\r\n");
            
            #line 106 "C:\Users\PC\Documents\Gits\Ionic-framework\GeneratorProject.IonicFrameworkCodeSamples\GeneratorProject\Platforms\Frontend\Ionic\Layout\Templates\LayoutComponentTemplate.tt"

        }

            
            #line default
            #line hidden
            this.Write("  constructor(\r\n");
            
            #line 110 "C:\Users\PC\Documents\Gits\Ionic-framework\GeneratorProject.IonicFrameworkCodeSamples\GeneratorProject\Platforms\Frontend\Ionic\Layout\Templates\LayoutComponentTemplate.tt"

        if (Menu.AsEnumerable() != null
            && Menu.AsEnumerable().Count() > 0)
        {

            
            #line default
            #line hidden
            this.Write("    public _events: Events,\r\n");
            
            #line 116 "C:\Users\PC\Documents\Gits\Ionic-framework\GeneratorProject.IonicFrameworkCodeSamples\GeneratorProject\Platforms\Frontend\Ionic\Layout\Templates\LayoutComponentTemplate.tt"

        }

        if (ApiDomainServices.AsEnumerable() != null
            && ApiDomainServices.AsEnumerable().Count() > 0)
        {
            foreach (var service in ApiDomainServices.AsEnumerable())
            {

            
            #line default
            #line hidden
            this.Write("    public _");
            
            #line 125 "C:\Users\PC\Documents\Gits\Ionic-framework\GeneratorProject.IonicFrameworkCodeSamples\GeneratorProject\Platforms\Frontend\Ionic\Layout\Templates\LayoutComponentTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(service.ToCamelCase()));
            
            #line default
            #line hidden
            this.Write(": ");
            
            #line 125 "C:\Users\PC\Documents\Gits\Ionic-framework\GeneratorProject.IonicFrameworkCodeSamples\GeneratorProject\Platforms\Frontend\Ionic\Layout\Templates\LayoutComponentTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(service.ToPascalCase()));
            
            #line default
            #line hidden
            this.Write(",\r\n");
            
            #line 126 "C:\Users\PC\Documents\Gits\Ionic-framework\GeneratorProject.IonicFrameworkCodeSamples\GeneratorProject\Platforms\Frontend\Ionic\Layout\Templates\LayoutComponentTemplate.tt"

            }
        }

            
            #line default
            #line hidden
            this.Write("    public _nav: NavController\r\n  ) {\r\n");
            
            #line 132 "C:\Users\PC\Documents\Gits\Ionic-framework\GeneratorProject.IonicFrameworkCodeSamples\GeneratorProject\Platforms\Frontend\Ionic\Layout\Templates\LayoutComponentTemplate.tt"

        if (Menu.AsEnumerable() != null
            && Menu.AsEnumerable().Count() > 0)
        {

            
            #line default
            #line hidden
            this.Write("    this._menu = [\r\n");
            
            #line 138 "C:\Users\PC\Documents\Gits\Ionic-framework\GeneratorProject.IonicFrameworkCodeSamples\GeneratorProject\Platforms\Frontend\Ionic\Layout\Templates\LayoutComponentTemplate.tt"

            var last = Menu.Keys.Last();
            foreach(var m in Menu.AsEnumerable())
            {
                if (m.Key.Equals(last))
                {

            
            #line default
            #line hidden
            this.Write("      { name: \'");
            
            #line 145 "C:\Users\PC\Documents\Gits\Ionic-framework\GeneratorProject.IonicFrameworkCodeSamples\GeneratorProject\Platforms\Frontend\Ionic\Layout\Templates\LayoutComponentTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(m.Value));
            
            #line default
            #line hidden
            this.Write("\', component: \'");
            
            #line 145 "C:\Users\PC\Documents\Gits\Ionic-framework\GeneratorProject.IonicFrameworkCodeSamples\GeneratorProject\Platforms\Frontend\Ionic\Layout\Templates\LayoutComponentTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(m.Key));
            
            #line default
            #line hidden
            this.Write("\' }\r\n");
            
            #line 146 "C:\Users\PC\Documents\Gits\Ionic-framework\GeneratorProject.IonicFrameworkCodeSamples\GeneratorProject\Platforms\Frontend\Ionic\Layout\Templates\LayoutComponentTemplate.tt"

                }
                else
                {

            
            #line default
            #line hidden
            this.Write("      { name: \'");
            
            #line 151 "C:\Users\PC\Documents\Gits\Ionic-framework\GeneratorProject.IonicFrameworkCodeSamples\GeneratorProject\Platforms\Frontend\Ionic\Layout\Templates\LayoutComponentTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(m.Value));
            
            #line default
            #line hidden
            this.Write("\', component: \'");
            
            #line 151 "C:\Users\PC\Documents\Gits\Ionic-framework\GeneratorProject.IonicFrameworkCodeSamples\GeneratorProject\Platforms\Frontend\Ionic\Layout\Templates\LayoutComponentTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(m.Key));
            
            #line default
            #line hidden
            this.Write("\' },\r\n");
            
            #line 152 "C:\Users\PC\Documents\Gits\Ionic-framework\GeneratorProject.IonicFrameworkCodeSamples\GeneratorProject\Platforms\Frontend\Ionic\Layout\Templates\LayoutComponentTemplate.tt"

                }
            }

            
            #line default
            #line hidden
            this.Write("    ];\r\n");
            
            #line 157 "C:\Users\PC\Documents\Gits\Ionic-framework\GeneratorProject.IonicFrameworkCodeSamples\GeneratorProject\Platforms\Frontend\Ionic\Layout\Templates\LayoutComponentTemplate.tt"

        }

            
            #line default
            #line hidden
            this.Write("  }\r\n\r\n");
            
            #line 162 "C:\Users\PC\Documents\Gits\Ionic-framework\GeneratorProject.IonicFrameworkCodeSamples\GeneratorProject\Platforms\Frontend\Ionic\Layout\Templates\LayoutComponentTemplate.tt"

        if (Layout.Actions.AsEnumerable() != null)
        {
            foreach (var action in Layout.Actions.AsEnumerable())
            {
                switch (action.Type.ToLower())
                {
                    case "navigation":
                        if (action.Target != null)
                        {
                            var actionTargetSplitted = action.Target.Split('.');
                            var targetedConcern = actionTargetSplitted[0].ToCamelCase();
                            var targetedLayout = actionTargetSplitted[1].ToCamelCase();

            
            #line default
            #line hidden
            this.Write("  /**\r\n   * method: on");
            
            #line 177 "C:\Users\PC\Documents\Gits\Ionic-framework\GeneratorProject.IonicFrameworkCodeSamples\GeneratorProject\Platforms\Frontend\Ionic\Layout\Templates\LayoutComponentTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(action.Id.ToPascalCase()));
            
            #line default
            #line hidden
            this.Write("\r\n   * That method is a navigation method.\r\n   */\r\n  public on");
            
            #line 180 "C:\Users\PC\Documents\Gits\Ionic-framework\GeneratorProject.IonicFrameworkCodeSamples\GeneratorProject\Platforms\Frontend\Ionic\Layout\Templates\LayoutComponentTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(action.Id.ToPascalCase()));
            
            #line default
            #line hidden
            this.Write("() {\r\n    this._nav.push(\'");
            
            #line 181 "C:\Users\PC\Documents\Gits\Ionic-framework\GeneratorProject.IonicFrameworkCodeSamples\GeneratorProject\Platforms\Frontend\Ionic\Layout\Templates\LayoutComponentTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture($"{targetedConcern}-{targetedLayout}"));
            
            #line default
            #line hidden
            this.Write("\');\r\n  }\r\n\r\n");
            
            #line 184 "C:\Users\PC\Documents\Gits\Ionic-framework\GeneratorProject.IonicFrameworkCodeSamples\GeneratorProject\Platforms\Frontend\Ionic\Layout\Templates\LayoutComponentTemplate.tt"

                        }
                        break;
                    case "method":

            
            #line default
            #line hidden
            this.Write("  /**\r\n   * method: on");
            
            #line 190 "C:\Users\PC\Documents\Gits\Ionic-framework\GeneratorProject.IonicFrameworkCodeSamples\GeneratorProject\Platforms\Frontend\Ionic\Layout\Templates\LayoutComponentTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(action.Id.ToPascalCase()));
            
            #line default
            #line hidden
            this.Write("\r\n   * That method is a blank method.\r\n   */\r\n  public on");
            
            #line 193 "C:\Users\PC\Documents\Gits\Ionic-framework\GeneratorProject.IonicFrameworkCodeSamples\GeneratorProject\Platforms\Frontend\Ionic\Layout\Templates\LayoutComponentTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(action.Id.ToPascalCase()));
            
            #line default
            #line hidden
            this.Write("() {\r\n    // TO DO\r\n  }\r\n\r\n");
            
            #line 197 "C:\Users\PC\Documents\Gits\Ionic-framework\GeneratorProject.IonicFrameworkCodeSamples\GeneratorProject\Platforms\Frontend\Ionic\Layout\Templates\LayoutComponentTemplate.tt"

                        break;
                    case "dataget": case "datalist": case "datacreate": case "dataupdate": case "datadelete":
                        if (action.Api != null
                            && Api != null)
                        {
                            var actionSplitted = action.Api.Split('.');
                            var apiService = actionSplitted[0];
                            var apiAction = actionSplitted[1];

                            foreach (var api in Api.AsEnumerable())
                            {
                                if (api.Id.ToLower().Equals(apiService.ToLower())
                                    && api.Actions.AsEnumerable() != null)
                                {
                                    foreach (var apiA in api.Actions.AsEnumerable())
                                    {
                                        if (apiA.Id.ToLower().Equals(apiAction.ToLower()))
                                        {

            
            #line default
            #line hidden
            this.Write("  /**\r\n   * method: on");
            
            #line 218 "C:\Users\PC\Documents\Gits\Ionic-framework\GeneratorProject.IonicFrameworkCodeSamples\GeneratorProject\Platforms\Frontend\Ionic\Layout\Templates\LayoutComponentTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(action.Id.ToPascalCase()));
            
            #line default
            #line hidden
            this.Write("\r\n   * You should add a description of your method here.\r\n   * that method is an " +
                    "Api service call method.\r\n");
            
            #line 221 "C:\Users\PC\Documents\Gits\Ionic-framework\GeneratorProject.IonicFrameworkCodeSamples\GeneratorProject\Platforms\Frontend\Ionic\Layout\Templates\LayoutComponentTemplate.tt"

                                            if (apiA.Parameters.AsEnumerable() != null
                                                && apiA.Parameters.AsEnumerable().Count() > 0)
                                            {
                                                foreach (var apiParameter in apiA.Parameters.AsEnumerable())
                                                {
                                                    if (apiParameter.Id != null)
                                                    {
                                                        var type = apiParameter.TypeScriptType();

                                                        if (!type.IsPrimitiveType())
                                                        {
                                                            type = type.ToPascalCase();
                                                        }

            
            #line default
            #line hidden
            this.Write("   * @param ");
            
            #line 236 "C:\Users\PC\Documents\Gits\Ionic-framework\GeneratorProject.IonicFrameworkCodeSamples\GeneratorProject\Platforms\Frontend\Ionic\Layout\Templates\LayoutComponentTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(apiParameter.Id.ToCamelCase()));
            
            #line default
            #line hidden
            this.Write(" `");
            
            #line 236 "C:\Users\PC\Documents\Gits\Ionic-framework\GeneratorProject.IonicFrameworkCodeSamples\GeneratorProject\Platforms\Frontend\Ionic\Layout\Templates\LayoutComponentTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(type));
            
            #line default
            #line hidden
            this.Write("`.\r\n");
            
            #line 237 "C:\Users\PC\Documents\Gits\Ionic-framework\GeneratorProject.IonicFrameworkCodeSamples\GeneratorProject\Platforms\Frontend\Ionic\Layout\Templates\LayoutComponentTemplate.tt"

                                                    }
                                                }
                                            }

            
            #line default
            #line hidden
            this.Write("   * @returns A `Subscription<any>`.\r\n   */\r\n  public on");
            
            #line 244 "C:\Users\PC\Documents\Gits\Ionic-framework\GeneratorProject.IonicFrameworkCodeSamples\GeneratorProject\Platforms\Frontend\Ionic\Layout\Templates\LayoutComponentTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(action.Id.ToPascalCase()));
            
            #line default
            #line hidden
            this.Write("(\r\n");
            
            #line 245 "C:\Users\PC\Documents\Gits\Ionic-framework\GeneratorProject.IonicFrameworkCodeSamples\GeneratorProject\Platforms\Frontend\Ionic\Layout\Templates\LayoutComponentTemplate.tt"

                                            if (apiA.Parameters.AsEnumerable() != null
                                                && apiA.Parameters.AsEnumerable().Count() > 0)
                                            {
                                                var last = apiA.Parameters.AsEnumerable().Last();
                                                foreach (var apiParameter in apiA.Parameters.AsEnumerable())
                                                {
                                                    if (apiParameter.Id != null)
                                                    {
                                                        var type = apiParameter.TypeScriptType();

                                                        if (!type.IsPrimitiveType())
                                                        {
                                                            type = type.ToPascalCase();
                                                        }

                                                        if (apiParameter.Equals(last))
                                                        {

            
            #line default
            #line hidden
            this.Write("    ");
            
            #line 264 "C:\Users\PC\Documents\Gits\Ionic-framework\GeneratorProject.IonicFrameworkCodeSamples\GeneratorProject\Platforms\Frontend\Ionic\Layout\Templates\LayoutComponentTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(apiParameter.Id.ToCamelCase()));
            
            #line default
            #line hidden
            this.Write(": ");
            
            #line 264 "C:\Users\PC\Documents\Gits\Ionic-framework\GeneratorProject.IonicFrameworkCodeSamples\GeneratorProject\Platforms\Frontend\Ionic\Layout\Templates\LayoutComponentTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(type));
            
            #line default
            #line hidden
            this.Write("\r\n");
            
            #line 265 "C:\Users\PC\Documents\Gits\Ionic-framework\GeneratorProject.IonicFrameworkCodeSamples\GeneratorProject\Platforms\Frontend\Ionic\Layout\Templates\LayoutComponentTemplate.tt"

                                                        }
                                                        else
                                                        {

            
            #line default
            #line hidden
            this.Write("    ");
            
            #line 270 "C:\Users\PC\Documents\Gits\Ionic-framework\GeneratorProject.IonicFrameworkCodeSamples\GeneratorProject\Platforms\Frontend\Ionic\Layout\Templates\LayoutComponentTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(apiParameter.Id.ToCamelCase()));
            
            #line default
            #line hidden
            this.Write(": ");
            
            #line 270 "C:\Users\PC\Documents\Gits\Ionic-framework\GeneratorProject.IonicFrameworkCodeSamples\GeneratorProject\Platforms\Frontend\Ionic\Layout\Templates\LayoutComponentTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(type));
            
            #line default
            #line hidden
            this.Write(",\r\n");
            
            #line 271 "C:\Users\PC\Documents\Gits\Ionic-framework\GeneratorProject.IonicFrameworkCodeSamples\GeneratorProject\Platforms\Frontend\Ionic\Layout\Templates\LayoutComponentTemplate.tt"

                                                        }
                                                    }
                                                }
                                            }

            
            #line default
            #line hidden
            this.Write("  ) {\r\n    return this._");
            
            #line 278 "C:\Users\PC\Documents\Gits\Ionic-framework\GeneratorProject.IonicFrameworkCodeSamples\GeneratorProject\Platforms\Frontend\Ionic\Layout\Templates\LayoutComponentTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(api.Id.ToCamelCase()));
            
            #line default
            #line hidden
            this.Write(".");
            
            #line 278 "C:\Users\PC\Documents\Gits\Ionic-framework\GeneratorProject.IonicFrameworkCodeSamples\GeneratorProject\Platforms\Frontend\Ionic\Layout\Templates\LayoutComponentTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(apiA.Id.ToCamelCase()));
            
            #line default
            #line hidden
            this.Write("(\r\n");
            
            #line 279 "C:\Users\PC\Documents\Gits\Ionic-framework\GeneratorProject.IonicFrameworkCodeSamples\GeneratorProject\Platforms\Frontend\Ionic\Layout\Templates\LayoutComponentTemplate.tt"

                                            if (apiA.Parameters.AsEnumerable() != null
                                                && apiA.Parameters.AsEnumerable().Count() > 0)
                                            {
                                                var last = apiA.Parameters.AsEnumerable().Last();

                                                foreach (var apiParameter in apiA.Parameters.AsEnumerable())
                                                {
                                                    if (apiParameter.Id != null
                                                        && apiParameter.Equals(last))
                                                    {

            
            #line default
            #line hidden
            this.Write("      ");
            
            #line 291 "C:\Users\PC\Documents\Gits\Ionic-framework\GeneratorProject.IonicFrameworkCodeSamples\GeneratorProject\Platforms\Frontend\Ionic\Layout\Templates\LayoutComponentTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(apiParameter.Id.ToCamelCase()));
            
            #line default
            #line hidden
            this.Write("\r\n");
            
            #line 292 "C:\Users\PC\Documents\Gits\Ionic-framework\GeneratorProject.IonicFrameworkCodeSamples\GeneratorProject\Platforms\Frontend\Ionic\Layout\Templates\LayoutComponentTemplate.tt"

                                                    }
                                                    else if (apiParameter.Id != null)
                                                    {

            
            #line default
            #line hidden
            this.Write("      ");
            
            #line 297 "C:\Users\PC\Documents\Gits\Ionic-framework\GeneratorProject.IonicFrameworkCodeSamples\GeneratorProject\Platforms\Frontend\Ionic\Layout\Templates\LayoutComponentTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(apiParameter.Id.ToCamelCase()));
            
            #line default
            #line hidden
            this.Write(",\r\n");
            
            #line 298 "C:\Users\PC\Documents\Gits\Ionic-framework\GeneratorProject.IonicFrameworkCodeSamples\GeneratorProject\Platforms\Frontend\Ionic\Layout\Templates\LayoutComponentTemplate.tt"

                                                    }
                                                }
                                            }


            
            #line default
            #line hidden
            this.Write("    ).subscribe();\r\n  }\r\n\r\n");
            
            #line 307 "C:\Users\PC\Documents\Gits\Ionic-framework\GeneratorProject.IonicFrameworkCodeSamples\GeneratorProject\Platforms\Frontend\Ionic\Layout\Templates\LayoutComponentTemplate.tt"

                                        }
                                    }
                                }
                            }
                        }
                        break;
                }
            }
        }

        if (Languages.AsEnumerable() != null
            && Languages.AsEnumerable().Count() > 0)
        {

            
            #line default
            #line hidden
            this.Write("  /**\r\n   * method: onLanguage.\r\n   * That method enables to enter language\r\n   *" +
                    " page with a button.\r\n   */\r\n  public onLanguage() {\r\n    this._nav.push(Languag" +
                    "ePage);\r\n  }\r\n\r\n");
            
            #line 331 "C:\Users\PC\Documents\Gits\Ionic-framework\GeneratorProject.IonicFrameworkCodeSamples\GeneratorProject\Platforms\Frontend\Ionic\Layout\Templates\LayoutComponentTemplate.tt"

        }

        if (Menu.AsEnumerable() != null
            && Menu.AsEnumerable().Count() > 0)
        {

            
            #line default
            #line hidden
            this.Write("  /**\r\n   * method: ionViewWillEnter.\r\n   * Base Ionic event which triggers\r\n   *" +
                    " global menu loading associated with\r\n   * each layout\'s specific menu.\r\n   */\r\n" +
                    "  public ionViewWillEnter() {\r\n    this._events.publish(\'menu\', this._menu);\r\n  " +
                    "}\r\n");
            
            #line 347 "C:\Users\PC\Documents\Gits\Ionic-framework\GeneratorProject.IonicFrameworkCodeSamples\GeneratorProject\Platforms\Frontend\Ionic\Layout\Templates\LayoutComponentTemplate.tt"

        }

            
            #line default
            #line hidden
            this.Write("}\r\n");
            
            #line 351 "C:\Users\PC\Documents\Gits\Ionic-framework\GeneratorProject.IonicFrameworkCodeSamples\GeneratorProject\Platforms\Frontend\Ionic\Layout\Templates\LayoutComponentTemplate.tt"

    }

            
            #line default
            #line hidden
            return this.GenerationEnvironment.ToString();
        }
    }
    
    #line default
    #line hidden
}
