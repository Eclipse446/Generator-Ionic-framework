<#@ include file="..\..\Base\Templates\Include.tt" #>
<!--
  You should add your licence here, here is an example :

  SonarQube, open source software quality management tool.
  Copyright (C) 2008-2013 SonarSource
  mailto:contact AT sonarsource DOT com

  SonarQube is free software; you can redistribute it and/or
  modify it under the terms of the GNU Lesser General Public
  License as published by the Free Software Foundation; either
  version 3 of the License, or (at your option) any later version.
 
  SonarQube is distributed in the hope that it will be useful,
  but WITHOUT ANY WARRANTY; without even the implied warranty of
  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
  Lesser General Public License for more details.
 
  You should have received a copy of the GNU Lesser General Public License
  along with this program; if not, write to the Free Software Foundation,
  Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.
-->
<#
    if (SmartAppTitle != null
        && Layout != null)
    {
#>
<!--
  That header enables the integration of a menu in the page.
  It should be a combinaison of a concern designed as a global
  menu and a specific menu defined in the current concern as
  isVisibleInMenu.
-->
<ion-header>
  <ion-navbar>
<#
        if (Menu.AsEnumerable() != null
            && Menu.AsEnumerable().Count() > 0)
        {
#>
    <button ion-button icon-only menuToggle>
      <ion-icon name="menu"></ion-icon>
    </button>
<#
        }
#>
    <ion-title text-center>
<#
        if (Languages.AsEnumerable() != null
            && Languages.AsEnumerable().Count() > 0)
        {
#>
        {{ "applicationTitle" | translate }}
<#  
        }
        else
        {
#>
        <#= SmartAppTitle.ToPascalCase() #>
<#
        }
#>
    </ion-title>
<#
        if (Languages.AsEnumerable() != null
            && Languages.AsEnumerable().Count() > 0)
        {
#>
    <ion-buttons end>
      <button ion-button icon-only (click)="onLanguage()">
        <ion-icon name="settings"></ion-icon>
      </button>
    </ion-buttons>
<#
        }
#>
  </ion-navbar>
</ion-header>

<ion-content padding>
<#
        if (Layout.Actions.AsEnumerable() != null)
        {
#>
  <ion-list no-lines>
<#
            foreach (var action in Layout.Actions.AsEnumerable())
            {
                if (action != null
                    && action.Id != null)
                {
#>
    <ion-item>
      <button ion-button (click)="on<#= action.Id.ToPascalCase() #>()">
<#
                    if (Languages.AsEnumerable() != null
                        && Languages.AsEnumerable().Count() > 0)
                    {
#>
        <!-- Generic call to component's methods, should be used differenty -->
        on{{ "<#= Concern.Id.ToCamelCase() #>.<#= Layout.Id.ToCamelCase() #>Layout<#= action.Id.ToPascalCase() #>Action" | translate }}
<#  
                    }
                    else 
                    {
#>
        <!-- Generic call to component's methods, should be used differenty -->
        on<#= action.Id.ToPascalCase() #> 
<#
                    }
                }
#>
      </button>
    </ion-item>
<#
            }
#>
  </ion-list>
<#
        }
#>
</ion-content>
<#
    }
#>
