// ------------------------------------------------------------------------------
// <auto-generated>
//     Ce code a été généré par un outil.
//     Version du runtime : 16.0.0.0
//  
//     Les changements apportés à ce fichier peuvent provoquer un comportement incorrect et seront perdues si
//     le code est régénéré.
// </auto-generated>
// ------------------------------------------------------------------------------
namespace GeneratorProject.Platforms.Frontend.Ionic
{
    using System.Linq;
    using System.Text;
    using System.Collections.Generic;
    using Mobioos.Scaffold.BaseGenerators.TextTemplating;
    using Mobioos.Foundation.Jade.Models;
    using Common.Generator.Framework.Extensions;
    using System;
    
    /// <summary>
    /// Class to produce the template output
    /// </summary>
    
    #line 1 "C:\Users\PC\Documents\Gits\Ionic-framework\GeneratorProject.IonicFrameworkCodeSamples\GeneratorProject\Platforms\Frontend\Ionic\UnitTests\Templates\ComponentSpecTemplate.tt"
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.VisualStudio.TextTemplating", "16.0.0.0")]
    public partial class ComponentSpecTemplate : TemplateBase
    {
#line hidden
        /// <summary>
        /// Create the template output
        /// </summary>
        public override string TransformText()
        {
            this.Write("\r\n");
            
            #line 2 "C:\Users\PC\Documents\Gits\Ionic-framework\GeneratorProject.IonicFrameworkCodeSamples\GeneratorProject\Platforms\Frontend\Ionic\UnitTests\Templates\ComponentSpecTemplate.tt"

    if (SmartAppId != null
        && ConcernId != null
        && Layout != null
        && Layout.Id != null)
    {
        var smartAppId = SmartAppId.ToPascalCase();
        var layout = $"{ConcernId.ToPascalCase()}{Layout.Id.ToPascalCase()}";
        var layoutToLower = $"{ConcernId.ToCamelCase()}-{Layout.Id.ToCamelCase()}";

            
            #line default
            #line hidden
            this.Write(@"import { IonicModule, NavController, Platform } from 'ionic-angular';
import { NavMock } from '../../../../test-config/mocks/navMock';
import { PlatformMock } from '../../../../test-config/mocks/platformMock';
import { SplashScreen } from '@ionic-native/splash-screen';
import { SplashScreenMock } from '../../../../test-config/mocks/splashScreenMock';
import { StatusBar } from '@ionic-native/status-bar';
import { StatusBarMock } from '../../../../test-config/mocks/statusBarMock';
import { Title } from '@angular/platform-browser';
import { TitleMock } from '../../../../test-config/mocks/titleMock';
import { async, ComponentFixture, fakeAsync, flushMicrotasks, TestBed } from '@angular/core/testing';
");
            
            #line 22 "C:\Users\PC\Documents\Gits\Ionic-framework\GeneratorProject.IonicFrameworkCodeSamples\GeneratorProject\Platforms\Frontend\Ionic\UnitTests\Templates\ComponentSpecTemplate.tt"

        var isLanguages = false;
        if (Languages.AsEnumerable() != null
            && Languages.AsEnumerable().Count() > 0)
        {
            isLanguages = true;
        }

        if (isLanguages)
        {

            
            #line default
            #line hidden
            this.Write(@"import { TranslateModule, TranslateService } from '@ngx-translate/core';
import { TranslateServiceMock } from '../../../../test-config/mocks/translateServiceMock';
import { LanguagePageModule } from '../../language/language.module';
import { LanguagePage } from '../../language/language';
");
            
            #line 37 "C:\Users\PC\Documents\Gits\Ionic-framework\GeneratorProject.IonicFrameworkCodeSamples\GeneratorProject\Platforms\Frontend\Ionic\UnitTests\Templates\ComponentSpecTemplate.tt"

        }

            
            #line default
            #line hidden
            this.Write("import { ");
            
            #line 40 "C:\Users\PC\Documents\Gits\Ionic-framework\GeneratorProject.IonicFrameworkCodeSamples\GeneratorProject\Platforms\Frontend\Ionic\UnitTests\Templates\ComponentSpecTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(smartAppId));
            
            #line default
            #line hidden
            this.Write(" } from \'../../../app/app.component\';\r\nimport { ");
            
            #line 41 "C:\Users\PC\Documents\Gits\Ionic-framework\GeneratorProject.IonicFrameworkCodeSamples\GeneratorProject\Platforms\Frontend\Ionic\UnitTests\Templates\ComponentSpecTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(layout));
            
            #line default
            #line hidden
            this.Write(" } from \"./");
            
            #line 41 "C:\Users\PC\Documents\Gits\Ionic-framework\GeneratorProject.IonicFrameworkCodeSamples\GeneratorProject\Platforms\Frontend\Ionic\UnitTests\Templates\ComponentSpecTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(layoutToLower));
            
            #line default
            #line hidden
            this.Write("\";\r\n");
            
            #line 42 "C:\Users\PC\Documents\Gits\Ionic-framework\GeneratorProject.IonicFrameworkCodeSamples\GeneratorProject\Platforms\Frontend\Ionic\UnitTests\Templates\ComponentSpecTemplate.tt"

        if (ViewModels.AsEnumerable() != null
            && ViewModels.AsEnumerable().Count() > 0)
        {
            foreach (var viewModel in ViewModels.AsEnumerable())
            {

            
            #line default
            #line hidden
            this.Write("import { ");
            
            #line 49 "C:\Users\PC\Documents\Gits\Ionic-framework\GeneratorProject.IonicFrameworkCodeSamples\GeneratorProject\Platforms\Frontend\Ionic\UnitTests\Templates\ComponentSpecTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(viewModel.ToPascalCase()));
            
            #line default
            #line hidden
            this.Write(" } from \'../../../viewModels/");
            
            #line 49 "C:\Users\PC\Documents\Gits\Ionic-framework\GeneratorProject.IonicFrameworkCodeSamples\GeneratorProject\Platforms\Frontend\Ionic\UnitTests\Templates\ComponentSpecTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(viewModel.ToCamelCase()));
            
            #line default
            #line hidden
            this.Write("\';\r\n");
            
            #line 50 "C:\Users\PC\Documents\Gits\Ionic-framework\GeneratorProject.IonicFrameworkCodeSamples\GeneratorProject\Platforms\Frontend\Ionic\UnitTests\Templates\ComponentSpecTemplate.tt"

            }
        }

        if (ApiDomainServices.AsEnumerable() != null
            && ApiDomainServices.AsEnumerable().Count() > 0)
        {
            foreach (var service in ApiDomainServices.AsEnumerable())
            {

            
            #line default
            #line hidden
            this.Write("import { ");
            
            #line 60 "C:\Users\PC\Documents\Gits\Ionic-framework\GeneratorProject.IonicFrameworkCodeSamples\GeneratorProject\Platforms\Frontend\Ionic\UnitTests\Templates\ComponentSpecTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(service.ToPascalCase()));
            
            #line default
            #line hidden
            this.Write(" } from \'../../../services/");
            
            #line 60 "C:\Users\PC\Documents\Gits\Ionic-framework\GeneratorProject.IonicFrameworkCodeSamples\GeneratorProject\Platforms\Frontend\Ionic\UnitTests\Templates\ComponentSpecTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(service.ToCamelCase()));
            
            #line default
            #line hidden
            this.Write(".service\';\r\nimport { ");
            
            #line 61 "C:\Users\PC\Documents\Gits\Ionic-framework\GeneratorProject.IonicFrameworkCodeSamples\GeneratorProject\Platforms\Frontend\Ionic\UnitTests\Templates\ComponentSpecTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(service.ToPascalCase()));
            
            #line default
            #line hidden
            this.Write("Mock } from \'../../../../test-config/mocks/");
            
            #line 61 "C:\Users\PC\Documents\Gits\Ionic-framework\GeneratorProject.IonicFrameworkCodeSamples\GeneratorProject\Platforms\Frontend\Ionic\UnitTests\Templates\ComponentSpecTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(service.ToCamelCase()));
            
            #line default
            #line hidden
            this.Write("Mock\';\r\n");
            
            #line 62 "C:\Users\PC\Documents\Gits\Ionic-framework\GeneratorProject.IonicFrameworkCodeSamples\GeneratorProject\Platforms\Frontend\Ionic\UnitTests\Templates\ComponentSpecTemplate.tt"

            }
        }

            
            #line default
            #line hidden
            this.Write("describe(\'");
            
            #line 66 "C:\Users\PC\Documents\Gits\Ionic-framework\GeneratorProject.IonicFrameworkCodeSamples\GeneratorProject\Platforms\Frontend\Ionic\UnitTests\Templates\ComponentSpecTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(layout));
            
            #line default
            #line hidden
            this.Write(" Component\', () => {\r\n  let fixture: ComponentFixture<");
            
            #line 67 "C:\Users\PC\Documents\Gits\Ionic-framework\GeneratorProject.IonicFrameworkCodeSamples\GeneratorProject\Platforms\Frontend\Ionic\UnitTests\Templates\ComponentSpecTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(layout));
            
            #line default
            #line hidden
            this.Write(">;\r\n  let component: ");
            
            #line 68 "C:\Users\PC\Documents\Gits\Ionic-framework\GeneratorProject.IonicFrameworkCodeSamples\GeneratorProject\Platforms\Frontend\Ionic\UnitTests\Templates\ComponentSpecTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(layout));
            
            #line default
            #line hidden
            this.Write(";\r\n  let spy: jasmine.Spy;\r\n\r\n  beforeEach(async(() => {\r\n    TestBed.configureTe" +
                    "stingModule({\r\n      declarations: [\r\n        ");
            
            #line 74 "C:\Users\PC\Documents\Gits\Ionic-framework\GeneratorProject.IonicFrameworkCodeSamples\GeneratorProject\Platforms\Frontend\Ionic\UnitTests\Templates\ComponentSpecTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(smartAppId));
            
            #line default
            #line hidden
            this.Write(",\r\n        ");
            
            #line 75 "C:\Users\PC\Documents\Gits\Ionic-framework\GeneratorProject.IonicFrameworkCodeSamples\GeneratorProject\Platforms\Frontend\Ionic\UnitTests\Templates\ComponentSpecTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(layout));
            
            #line default
            #line hidden
            this.Write("\r\n      ],\r\n      imports: [\r\n");
            
            #line 78 "C:\Users\PC\Documents\Gits\Ionic-framework\GeneratorProject.IonicFrameworkCodeSamples\GeneratorProject\Platforms\Frontend\Ionic\UnitTests\Templates\ComponentSpecTemplate.tt"

        if (isLanguages)
        {

            
            #line default
            #line hidden
            this.Write("        LanguagePageModule,\r\n        TranslateModule.forChild(),\r\n");
            
            #line 84 "C:\Users\PC\Documents\Gits\Ionic-framework\GeneratorProject.IonicFrameworkCodeSamples\GeneratorProject\Platforms\Frontend\Ionic\UnitTests\Templates\ComponentSpecTemplate.tt"

        }

            
            #line default
            #line hidden
            this.Write("        IonicModule.forRoot(");
            
            #line 87 "C:\Users\PC\Documents\Gits\Ionic-framework\GeneratorProject.IonicFrameworkCodeSamples\GeneratorProject\Platforms\Frontend\Ionic\UnitTests\Templates\ComponentSpecTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(smartAppId));
            
            #line default
            #line hidden
            this.Write(")\r\n      ],\r\n      providers: [\r\n");
            
            #line 90 "C:\Users\PC\Documents\Gits\Ionic-framework\GeneratorProject.IonicFrameworkCodeSamples\GeneratorProject\Platforms\Frontend\Ionic\UnitTests\Templates\ComponentSpecTemplate.tt"

        if (ApiDomainServices.AsEnumerable() != null
            && ApiDomainServices.AsEnumerable().Count() > 0)
        {
            foreach (var service in ApiDomainServices.AsEnumerable())
            {

            
            #line default
            #line hidden
            this.Write("        { provide: ");
            
            #line 97 "C:\Users\PC\Documents\Gits\Ionic-framework\GeneratorProject.IonicFrameworkCodeSamples\GeneratorProject\Platforms\Frontend\Ionic\UnitTests\Templates\ComponentSpecTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(service.ToPascalCase()));
            
            #line default
            #line hidden
            this.Write(", useClass: ");
            
            #line 97 "C:\Users\PC\Documents\Gits\Ionic-framework\GeneratorProject.IonicFrameworkCodeSamples\GeneratorProject\Platforms\Frontend\Ionic\UnitTests\Templates\ComponentSpecTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(service.ToPascalCase()));
            
            #line default
            #line hidden
            this.Write("Mock },\r\n");
            
            #line 98 "C:\Users\PC\Documents\Gits\Ionic-framework\GeneratorProject.IonicFrameworkCodeSamples\GeneratorProject\Platforms\Frontend\Ionic\UnitTests\Templates\ComponentSpecTemplate.tt"

            }
        }

            
            #line default
            #line hidden
            this.Write("        { provide: Platform, useClass: PlatformMock },\r\n        { provide: Status" +
                    "Bar, useClass: StatusBarMock },\r\n        { provide: SplashScreen, useClass: Spla" +
                    "shScreenMock },\r\n");
            
            #line 105 "C:\Users\PC\Documents\Gits\Ionic-framework\GeneratorProject.IonicFrameworkCodeSamples\GeneratorProject\Platforms\Frontend\Ionic\UnitTests\Templates\ComponentSpecTemplate.tt"

        if (isLanguages)
        {

            
            #line default
            #line hidden
            this.Write("        { provide: TranslateService, useClass: TranslateServiceMock },\r\n");
            
            #line 110 "C:\Users\PC\Documents\Gits\Ionic-framework\GeneratorProject.IonicFrameworkCodeSamples\GeneratorProject\Platforms\Frontend\Ionic\UnitTests\Templates\ComponentSpecTemplate.tt"

        }

            
            #line default
            #line hidden
            this.Write("        { provide: NavController, useClass: NavMock },\r\n        { provide: Title," +
                    " useClass: TitleMock },\r\n      ]\r\n    }).compileComponents();\r\n  }));\r\n\r\n  befor" +
                    "eEach(async() => {\r\n    fixture = TestBed.createComponent(");
            
            #line 120 "C:\Users\PC\Documents\Gits\Ionic-framework\GeneratorProject.IonicFrameworkCodeSamples\GeneratorProject\Platforms\Frontend\Ionic\UnitTests\Templates\ComponentSpecTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(layout));
            
            #line default
            #line hidden
            this.Write(");\r\n    component = fixture.componentInstance;\r\n  });\r\n  \r\n  afterEach(() => {\r\n " +
                    "   fixture.destroy();\r\n    component = null;\r\n  });\r\n\r\n  it(\'");
            
            #line 129 "C:\Users\PC\Documents\Gits\Ionic-framework\GeneratorProject.IonicFrameworkCodeSamples\GeneratorProject\Platforms\Frontend\Ionic\UnitTests\Templates\ComponentSpecTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(layout));
            
            #line default
            #line hidden
            this.Write(" Component: should be created\', fakeAsync(() => {\r\n    expect(component instanceo" +
                    "f ");
            
            #line 130 "C:\Users\PC\Documents\Gits\Ionic-framework\GeneratorProject.IonicFrameworkCodeSamples\GeneratorProject\Platforms\Frontend\Ionic\UnitTests\Templates\ComponentSpecTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(layout));
            
            #line default
            #line hidden
            this.Write(").toBeTruthy();\r\n  }));\r\n\r\n");
            
            #line 133 "C:\Users\PC\Documents\Gits\Ionic-framework\GeneratorProject.IonicFrameworkCodeSamples\GeneratorProject\Platforms\Frontend\Ionic\UnitTests\Templates\ComponentSpecTemplate.tt"

        if (isLanguages)
        {

            
            #line default
            #line hidden
            this.Write("  it(\'");
            
            #line 137 "C:\Users\PC\Documents\Gits\Ionic-framework\GeneratorProject.IonicFrameworkCodeSamples\GeneratorProject\Platforms\Frontend\Ionic\UnitTests\Templates\ComponentSpecTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(layout));
            
            #line default
            #line hidden
            this.Write(@" Component: should navigate to language page', fakeAsync(() => {
    spy = spyOn(component, 'onLanguage').and.callThrough();
    component.onLanguage();
    flushMicrotasks();
    expect(spy).toHaveBeenCalled();
    spy = spyOn(component._nav, 'push').and.callThrough();
    component.onLanguage();
    flushMicrotasks();
    expect(spy).toHaveBeenCalledWith(LanguagePage);
    spy.calls.mostRecent().returnValue.then((result) => {
      expect(result).toEqual('PUSH');
    });
  }));
");
            
            #line 150 "C:\Users\PC\Documents\Gits\Ionic-framework\GeneratorProject.IonicFrameworkCodeSamples\GeneratorProject\Platforms\Frontend\Ionic\UnitTests\Templates\ComponentSpecTemplate.tt"

        }

        if (Layout.Actions.AsEnumerable() != null)
        {
            foreach (var action in Layout.Actions.AsEnumerable())
            {
                switch (action.Type.ToLower())
                {
                    case "navigation":
                        if (action.Target != null)
                        {
                            var actionTargetSplitted = action.Target.Split('.');
                            var targetedConcern = actionTargetSplitted[0].ToCamelCase();
                            var targetedLayout = actionTargetSplitted[1].ToCamelCase();

            
            #line default
            #line hidden
            this.Write("  it(\'");
            
            #line 166 "C:\Users\PC\Documents\Gits\Ionic-framework\GeneratorProject.IonicFrameworkCodeSamples\GeneratorProject\Platforms\Frontend\Ionic\UnitTests\Templates\ComponentSpecTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(layout));
            
            #line default
            #line hidden
            this.Write(" Component - on");
            
            #line 166 "C:\Users\PC\Documents\Gits\Ionic-framework\GeneratorProject.IonicFrameworkCodeSamples\GeneratorProject\Platforms\Frontend\Ionic\UnitTests\Templates\ComponentSpecTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(action.Id.ToPascalCase()));
            
            #line default
            #line hidden
            this.Write(": should navigate to ");
            
            #line 166 "C:\Users\PC\Documents\Gits\Ionic-framework\GeneratorProject.IonicFrameworkCodeSamples\GeneratorProject\Platforms\Frontend\Ionic\UnitTests\Templates\ComponentSpecTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture($"{targetedConcern}-{targetedLayout}"));
            
            #line default
            #line hidden
            this.Write(" page\', fakeAsync(() => {\r\n    spy = spyOn(component, \'on");
            
            #line 167 "C:\Users\PC\Documents\Gits\Ionic-framework\GeneratorProject.IonicFrameworkCodeSamples\GeneratorProject\Platforms\Frontend\Ionic\UnitTests\Templates\ComponentSpecTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(action.Id.ToPascalCase()));
            
            #line default
            #line hidden
            this.Write("\').and.callThrough();\r\n    component.on");
            
            #line 168 "C:\Users\PC\Documents\Gits\Ionic-framework\GeneratorProject.IonicFrameworkCodeSamples\GeneratorProject\Platforms\Frontend\Ionic\UnitTests\Templates\ComponentSpecTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(action.Id.ToPascalCase()));
            
            #line default
            #line hidden
            this.Write("();\r\n    flushMicrotasks();\r\n    expect(spy).toHaveBeenCalled();\r\n    spy = spyOn" +
                    "(component._nav, \'push\').and.callThrough();\r\n    component.on");
            
            #line 172 "C:\Users\PC\Documents\Gits\Ionic-framework\GeneratorProject.IonicFrameworkCodeSamples\GeneratorProject\Platforms\Frontend\Ionic\UnitTests\Templates\ComponentSpecTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(action.Id.ToPascalCase()));
            
            #line default
            #line hidden
            this.Write("();\r\n    flushMicrotasks();\r\n    expect(spy).toHaveBeenCalledWith(\'");
            
            #line 174 "C:\Users\PC\Documents\Gits\Ionic-framework\GeneratorProject.IonicFrameworkCodeSamples\GeneratorProject\Platforms\Frontend\Ionic\UnitTests\Templates\ComponentSpecTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture($"{targetedConcern}-{targetedLayout}"));
            
            #line default
            #line hidden
            this.Write("\');\r\n    spy.calls.mostRecent().returnValue.then((result) => {\r\n      expect(resu" +
                    "lt).toEqual(\'PUSH\');\r\n    });\r\n  }));\r\n\r\n");
            
            #line 180 "C:\Users\PC\Documents\Gits\Ionic-framework\GeneratorProject.IonicFrameworkCodeSamples\GeneratorProject\Platforms\Frontend\Ionic\UnitTests\Templates\ComponentSpecTemplate.tt"

                        }
                        break;
                    case "method":

            
            #line default
            #line hidden
            this.Write("  it(\'");
            
            #line 185 "C:\Users\PC\Documents\Gits\Ionic-framework\GeneratorProject.IonicFrameworkCodeSamples\GeneratorProject\Platforms\Frontend\Ionic\UnitTests\Templates\ComponentSpecTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(layout));
            
            #line default
            #line hidden
            this.Write(" Component - on");
            
            #line 185 "C:\Users\PC\Documents\Gits\Ionic-framework\GeneratorProject.IonicFrameworkCodeSamples\GeneratorProject\Platforms\Frontend\Ionic\UnitTests\Templates\ComponentSpecTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(action.Id.ToPascalCase()));
            
            #line default
            #line hidden
            this.Write(": should do nothing\', fakeAsync(() => {\r\n    spy = spyOn(component, \'on");
            
            #line 186 "C:\Users\PC\Documents\Gits\Ionic-framework\GeneratorProject.IonicFrameworkCodeSamples\GeneratorProject\Platforms\Frontend\Ionic\UnitTests\Templates\ComponentSpecTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(action.Id.ToPascalCase()));
            
            #line default
            #line hidden
            this.Write("\').and.callThrough();\r\n    component.on");
            
            #line 187 "C:\Users\PC\Documents\Gits\Ionic-framework\GeneratorProject.IonicFrameworkCodeSamples\GeneratorProject\Platforms\Frontend\Ionic\UnitTests\Templates\ComponentSpecTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(action.Id.ToPascalCase()));
            
            #line default
            #line hidden
            this.Write("();\r\n    flushMicrotasks();\r\n    expect(spy).toHaveBeenCalled();\r\n    var result " +
                    "= spy.calls.mostRecent().returnValue;\r\n    expect(result).toBeUndefined();\r\n  })" +
                    ");\r\n\r\n");
            
            #line 194 "C:\Users\PC\Documents\Gits\Ionic-framework\GeneratorProject.IonicFrameworkCodeSamples\GeneratorProject\Platforms\Frontend\Ionic\UnitTests\Templates\ComponentSpecTemplate.tt"

                        break;
                    case "dataget": case "datalist": case "datacreate": case "dataupdate": case "datadelete":
                        if (action.Api != null
                            && Api != null)
                        {
                            var actionSplitted = action.Api.Split('.');
                            var apiService = actionSplitted[0];
                            var apiAction = actionSplitted[1];

                            foreach (var api in Api.AsEnumerable())
                            {
                                if (api.Id.ToLower().Equals(apiService.ToLower())
                                    && api.Actions.AsEnumerable() != null)
                                {
                                    foreach (var apiA in api.Actions.AsEnumerable())
                                    {
                                        if (apiA.Id.ToLower().Equals(apiAction.ToLower()))
                                        {

            
            #line default
            #line hidden
            this.Write("  it(\'");
            
            #line 214 "C:\Users\PC\Documents\Gits\Ionic-framework\GeneratorProject.IonicFrameworkCodeSamples\GeneratorProject\Platforms\Frontend\Ionic\UnitTests\Templates\ComponentSpecTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(layout));
            
            #line default
            #line hidden
            this.Write(" Component - on");
            
            #line 214 "C:\Users\PC\Documents\Gits\Ionic-framework\GeneratorProject.IonicFrameworkCodeSamples\GeneratorProject\Platforms\Frontend\Ionic\UnitTests\Templates\ComponentSpecTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(action.Id.ToPascalCase()));
            
            #line default
            #line hidden
            this.Write(": should use ");
            
            #line 214 "C:\Users\PC\Documents\Gits\Ionic-framework\GeneratorProject.IonicFrameworkCodeSamples\GeneratorProject\Platforms\Frontend\Ionic\UnitTests\Templates\ComponentSpecTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(api.Id.ToCamelCase()));
            
            #line default
            #line hidden
            this.Write(" service to ");
            
            #line 214 "C:\Users\PC\Documents\Gits\Ionic-framework\GeneratorProject.IonicFrameworkCodeSamples\GeneratorProject\Platforms\Frontend\Ionic\UnitTests\Templates\ComponentSpecTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(action.Id.ToPascalCase()));
            
            #line default
            #line hidden
            this.Write("\', fakeAsync(() => {\r\n");
            
            #line 215 "C:\Users\PC\Documents\Gits\Ionic-framework\GeneratorProject.IonicFrameworkCodeSamples\GeneratorProject\Platforms\Frontend\Ionic\UnitTests\Templates\ComponentSpecTemplate.tt"

                                            if (apiA.Parameters.AsEnumerable() != null
                                                && apiA.Parameters.AsEnumerable().Count() > 0)
                                            {
                                                foreach (var apiParameter in apiA.Parameters.AsEnumerable())
                                                {
                                                    if (apiParameter.Id != null)
                                                    {
                                                        var type = apiParameter.TypeScriptType();
                                                        var value = GetValueFromType(type);

            
            #line default
            #line hidden
            this.Write("    var ");
            
            #line 226 "C:\Users\PC\Documents\Gits\Ionic-framework\GeneratorProject.IonicFrameworkCodeSamples\GeneratorProject\Platforms\Frontend\Ionic\UnitTests\Templates\ComponentSpecTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(apiParameter.Id.ToCamelCase()));
            
            #line default
            #line hidden
            this.Write(" = ");
            
            #line 226 "C:\Users\PC\Documents\Gits\Ionic-framework\GeneratorProject.IonicFrameworkCodeSamples\GeneratorProject\Platforms\Frontend\Ionic\UnitTests\Templates\ComponentSpecTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(value));
            
            #line default
            #line hidden
            this.Write(";\r\n");
            
            #line 227 "C:\Users\PC\Documents\Gits\Ionic-framework\GeneratorProject.IonicFrameworkCodeSamples\GeneratorProject\Platforms\Frontend\Ionic\UnitTests\Templates\ComponentSpecTemplate.tt"

                                                    }
                                                }
                                            }

            
            #line default
            #line hidden
            this.Write("    spy = spyOn(component, \'on");
            
            #line 232 "C:\Users\PC\Documents\Gits\Ionic-framework\GeneratorProject.IonicFrameworkCodeSamples\GeneratorProject\Platforms\Frontend\Ionic\UnitTests\Templates\ComponentSpecTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(action.Id.ToPascalCase()));
            
            #line default
            #line hidden
            this.Write("\').and.callThrough();\r\n    component.on");
            
            #line 233 "C:\Users\PC\Documents\Gits\Ionic-framework\GeneratorProject.IonicFrameworkCodeSamples\GeneratorProject\Platforms\Frontend\Ionic\UnitTests\Templates\ComponentSpecTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(action.Id.ToPascalCase()));
            
            #line default
            #line hidden
            this.Write("(\r\n");
            
            #line 234 "C:\Users\PC\Documents\Gits\Ionic-framework\GeneratorProject.IonicFrameworkCodeSamples\GeneratorProject\Platforms\Frontend\Ionic\UnitTests\Templates\ComponentSpecTemplate.tt"

                                            if (apiA.Parameters.AsEnumerable() != null
                                                && apiA.Parameters.AsEnumerable().Count() > 0)
                                            {
                                                var last = apiA.Parameters.AsEnumerable().Last();

                                                foreach (var apiParameter in apiA.Parameters.AsEnumerable())
                                                {
                                                    if (apiParameter.Id != null)
                                                    {
                                                        var type = apiParameter.TypeScriptType();
                                                        var value = GetValueFromType(type);

                                                        if (apiParameter.Equals(last))
                                                        {

            
            #line default
            #line hidden
            this.Write("    ");
            
            #line 250 "C:\Users\PC\Documents\Gits\Ionic-framework\GeneratorProject.IonicFrameworkCodeSamples\GeneratorProject\Platforms\Frontend\Ionic\UnitTests\Templates\ComponentSpecTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(apiParameter.Id.ToCamelCase()));
            
            #line default
            #line hidden
            this.Write("\r\n");
            
            #line 251 "C:\Users\PC\Documents\Gits\Ionic-framework\GeneratorProject.IonicFrameworkCodeSamples\GeneratorProject\Platforms\Frontend\Ionic\UnitTests\Templates\ComponentSpecTemplate.tt"

                                                        }
                                                        else
                                                        {

            
            #line default
            #line hidden
            this.Write("    ");
            
            #line 256 "C:\Users\PC\Documents\Gits\Ionic-framework\GeneratorProject.IonicFrameworkCodeSamples\GeneratorProject\Platforms\Frontend\Ionic\UnitTests\Templates\ComponentSpecTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(apiParameter.Id.ToCamelCase()));
            
            #line default
            #line hidden
            this.Write(",\r\n");
            
            #line 257 "C:\Users\PC\Documents\Gits\Ionic-framework\GeneratorProject.IonicFrameworkCodeSamples\GeneratorProject\Platforms\Frontend\Ionic\UnitTests\Templates\ComponentSpecTemplate.tt"

                                                        }
                                                    }
                                                }
                                            }

            
            #line default
            #line hidden
            this.Write("    );\r\n    flushMicrotasks();\r\n    expect(spy).toHaveBeenCalledWith(\r\n");
            
            #line 266 "C:\Users\PC\Documents\Gits\Ionic-framework\GeneratorProject.IonicFrameworkCodeSamples\GeneratorProject\Platforms\Frontend\Ionic\UnitTests\Templates\ComponentSpecTemplate.tt"

                                            if (apiA.Parameters.AsEnumerable() != null
                                                && apiA.Parameters.AsEnumerable().Count() > 0)
                                            {
                                                var last = apiA.Parameters.AsEnumerable().Last();

                                                foreach (var apiParameter in apiA.Parameters.AsEnumerable())
                                                {
                                                    if (apiParameter.Id != null)
                                                    {
                                                        var type = apiParameter.TypeScriptType();
                                                        var value = GetValueFromType(type);

                                                        if (apiParameter.Equals(last))
                                                        {

            
            #line default
            #line hidden
            this.Write("    ");
            
            #line 282 "C:\Users\PC\Documents\Gits\Ionic-framework\GeneratorProject.IonicFrameworkCodeSamples\GeneratorProject\Platforms\Frontend\Ionic\UnitTests\Templates\ComponentSpecTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(apiParameter.Id.ToCamelCase()));
            
            #line default
            #line hidden
            this.Write("\r\n");
            
            #line 283 "C:\Users\PC\Documents\Gits\Ionic-framework\GeneratorProject.IonicFrameworkCodeSamples\GeneratorProject\Platforms\Frontend\Ionic\UnitTests\Templates\ComponentSpecTemplate.tt"

                                                        }
                                                        else
                                                        {

            
            #line default
            #line hidden
            this.Write("    ");
            
            #line 288 "C:\Users\PC\Documents\Gits\Ionic-framework\GeneratorProject.IonicFrameworkCodeSamples\GeneratorProject\Platforms\Frontend\Ionic\UnitTests\Templates\ComponentSpecTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(apiParameter.Id.ToCamelCase()));
            
            #line default
            #line hidden
            this.Write(",\r\n");
            
            #line 289 "C:\Users\PC\Documents\Gits\Ionic-framework\GeneratorProject.IonicFrameworkCodeSamples\GeneratorProject\Platforms\Frontend\Ionic\UnitTests\Templates\ComponentSpecTemplate.tt"

                                                        }
                                                    }
                                                }
                                            }

            
            #line default
            #line hidden
            this.Write("    );\r\n    spy = spyOn(component._");
            
            #line 296 "C:\Users\PC\Documents\Gits\Ionic-framework\GeneratorProject.IonicFrameworkCodeSamples\GeneratorProject\Platforms\Frontend\Ionic\UnitTests\Templates\ComponentSpecTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(api.Id.ToCamelCase()));
            
            #line default
            #line hidden
            this.Write(", \'");
            
            #line 296 "C:\Users\PC\Documents\Gits\Ionic-framework\GeneratorProject.IonicFrameworkCodeSamples\GeneratorProject\Platforms\Frontend\Ionic\UnitTests\Templates\ComponentSpecTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(apiA.Id.ToCamelCase()));
            
            #line default
            #line hidden
            this.Write("\').and.callThrough();\r\n    component.on");
            
            #line 297 "C:\Users\PC\Documents\Gits\Ionic-framework\GeneratorProject.IonicFrameworkCodeSamples\GeneratorProject\Platforms\Frontend\Ionic\UnitTests\Templates\ComponentSpecTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(action.Id.ToPascalCase()));
            
            #line default
            #line hidden
            this.Write("(\r\n");
            
            #line 298 "C:\Users\PC\Documents\Gits\Ionic-framework\GeneratorProject.IonicFrameworkCodeSamples\GeneratorProject\Platforms\Frontend\Ionic\UnitTests\Templates\ComponentSpecTemplate.tt"

                                            if (apiA.Parameters.AsEnumerable() != null
                                                && apiA.Parameters.AsEnumerable().Count() > 0)
                                            {
                                                var last = apiA.Parameters.AsEnumerable().Last();
                                                foreach (var apiParameter in apiA.Parameters.AsEnumerable())
                                                {
                                                    if (apiParameter.Id != null)
                                                    {
                                                        var type = apiParameter.TypeScriptType();
                                                        var value = GetValueFromType(type);

                                                        if (apiParameter.Equals(last))
                                                        {

            
            #line default
            #line hidden
            this.Write("    ");
            
            #line 313 "C:\Users\PC\Documents\Gits\Ionic-framework\GeneratorProject.IonicFrameworkCodeSamples\GeneratorProject\Platforms\Frontend\Ionic\UnitTests\Templates\ComponentSpecTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(apiParameter.Id.ToCamelCase()));
            
            #line default
            #line hidden
            this.Write("\r\n");
            
            #line 314 "C:\Users\PC\Documents\Gits\Ionic-framework\GeneratorProject.IonicFrameworkCodeSamples\GeneratorProject\Platforms\Frontend\Ionic\UnitTests\Templates\ComponentSpecTemplate.tt"

                                                        }
                                                        else
                                                        {

            
            #line default
            #line hidden
            this.Write("    ");
            
            #line 319 "C:\Users\PC\Documents\Gits\Ionic-framework\GeneratorProject.IonicFrameworkCodeSamples\GeneratorProject\Platforms\Frontend\Ionic\UnitTests\Templates\ComponentSpecTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(apiParameter.Id.ToCamelCase()));
            
            #line default
            #line hidden
            this.Write(",\r\n");
            
            #line 320 "C:\Users\PC\Documents\Gits\Ionic-framework\GeneratorProject.IonicFrameworkCodeSamples\GeneratorProject\Platforms\Frontend\Ionic\UnitTests\Templates\ComponentSpecTemplate.tt"

                                                        }
                                                    }
                                                }
                                            }

            
            #line default
            #line hidden
            this.Write("    );\r\n    flushMicrotasks();\r\n    expect(spy).toHaveBeenCalledWith(\r\n");
            
            #line 329 "C:\Users\PC\Documents\Gits\Ionic-framework\GeneratorProject.IonicFrameworkCodeSamples\GeneratorProject\Platforms\Frontend\Ionic\UnitTests\Templates\ComponentSpecTemplate.tt"

                                            if (apiA.Parameters.AsEnumerable() != null
                                                && apiA.Parameters.AsEnumerable().Count() > 0)
                                            {
                                                var last = apiA.Parameters.AsEnumerable().Last();

                                                foreach (var apiParameter in apiA.Parameters.AsEnumerable())
                                                {
                                                    if (apiParameter.Id != null)
                                                    {
                                                        var type = apiParameter.TypeScriptType();
                                                        var value = GetValueFromType(type);

                                                        if (apiParameter.Equals(last))
                                                        {

            
            #line default
            #line hidden
            this.Write("    ");
            
            #line 345 "C:\Users\PC\Documents\Gits\Ionic-framework\GeneratorProject.IonicFrameworkCodeSamples\GeneratorProject\Platforms\Frontend\Ionic\UnitTests\Templates\ComponentSpecTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(apiParameter.Id.ToCamelCase()));
            
            #line default
            #line hidden
            this.Write("\r\n");
            
            #line 346 "C:\Users\PC\Documents\Gits\Ionic-framework\GeneratorProject.IonicFrameworkCodeSamples\GeneratorProject\Platforms\Frontend\Ionic\UnitTests\Templates\ComponentSpecTemplate.tt"

                                                        }
                                                        else
                                                        {

            
            #line default
            #line hidden
            this.Write("    ");
            
            #line 351 "C:\Users\PC\Documents\Gits\Ionic-framework\GeneratorProject.IonicFrameworkCodeSamples\GeneratorProject\Platforms\Frontend\Ionic\UnitTests\Templates\ComponentSpecTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(apiParameter.Id.ToCamelCase()));
            
            #line default
            #line hidden
            this.Write(",\r\n");
            
            #line 352 "C:\Users\PC\Documents\Gits\Ionic-framework\GeneratorProject.IonicFrameworkCodeSamples\GeneratorProject\Platforms\Frontend\Ionic\UnitTests\Templates\ComponentSpecTemplate.tt"

                                                        }
                                                    }
                                                }
                                            }

            
            #line default
            #line hidden
            this.Write("    );\r\n    var result = spy.calls.mostRecent().returnValue;\r\n    expect(result)." +
                    "toBeDefined();\r\n  }));\r\n");
            
            #line 362 "C:\Users\PC\Documents\Gits\Ionic-framework\GeneratorProject.IonicFrameworkCodeSamples\GeneratorProject\Platforms\Frontend\Ionic\UnitTests\Templates\ComponentSpecTemplate.tt"

                                        }
                                    }
                                }
                            }
                        }
                        break;
                }
            }
        }

            
            #line default
            #line hidden
            this.Write("});\r\n");
            
            #line 374 "C:\Users\PC\Documents\Gits\Ionic-framework\GeneratorProject.IonicFrameworkCodeSamples\GeneratorProject\Platforms\Frontend\Ionic\UnitTests\Templates\ComponentSpecTemplate.tt"

    }

            
            #line default
            #line hidden
            return this.GenerationEnvironment.ToString();
        }
    }
    
    #line default
    #line hidden
}
