<#@ template language="C#" inherits="AppBaseClass" #>
<#@ assembly name="System.Core" #>
<#@ import namespace="System.Linq" #>
<#@ import namespace="System.Text" #>
<#@ import namespace="System.Collections.Generic" #>
<#@ import namespace="Mobioos.Foundation.Jade.Models" #>
<#@ import namespace="Common.Generator.Framework.Extensions" #>
/*
 * You should add your licence here, here is an example :
 *
 * SonarQube, open source software quality management tool.
 * Copyright (C) 2008-2013 SonarSource
 * mailto:contact AT sonarsource DOT com
 *
 * SonarQube is free software; you can redistribute it and/or
 * modify it under the terms of the GNU Lesser General Public
 * License as published by the Free Software Foundation; either
 * version 3 of the License, or (at your option) any later version.
 *
 * SonarQube is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
 * Lesser General Public License for more details.
 *
 * You should have received a copy of the GNU Lesser General Public License
 * along with this program; if not, write to the Free Software Foundation,
 * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.
 */
<#
    SmartAppInfo smartApp = (SmartAppInfo)Model;
    if (smartApp != null && smartApp.Id != null)
    {
#>
import { Component, ViewChild } from '@angular/core';
import { Platform, NavController<# if (_isMenu) { #>, Events <# } #> } from 'ionic-angular';
import { StatusBar } from '@ionic-native/status-bar';
import { SplashScreen } from '@ionic-native/splash-screen';
import { Title } from '@angular/platform-browser';

<#
      if (smartApp.Concerns.AsEnumerable() != null && _rootLayout != null && _rootLayout.Id != null && _rootConcern != null && _rootConcern.Id != null)
      {
        string concern = _rootConcern.Id.ToPascalCase();
        string layout = _rootLayout.Id.ToPascalCase();
        string layoutComponent = concern + layout;
        string layoutComponentToLower = concern.ToCamelCase() + "-" + layout.ToCamelCase();
#>
import { <#= layoutComponent #> } from '../pages/<#= concern.ToCamelCase() #>/<#= layout.ToCamelCase() #>/<#= layoutComponentToLower #>';
<#
      }
#>

<#
      if (smartApp.Languages.AsEnumerable() != null && smartApp.Languages.AsEnumerable().Count() > 0)
      {
#>
import { TranslateService } from '@ngx-translate/core';
<#
      }
#>
/**
 * class: <#= smartApp.Id.ToPascalCase() #>.
<#
      if (smartApp.Description != null)
      {
#>
 * <#= smartApp.Description #>.
 * This is the main component of the application.
 * This component is generated from multiple domains.
<#
      }
      else
      {
#>
 * This is the main component of the application.
 * This component is generated from multiple domains.
<#
      }
#>
 */
@Component({
  templateUrl: 'app.html'
})
export class <#= smartApp.Id.ToPascalCase() #> {
<#
      if (smartApp.Concerns.AsEnumerable() != null)
      {
#>
  @ViewChild('nav') public _nav: NavController;
<#
        if (_isMenu)
        {
#>
  public _menu;
<#
        }
      }
#>
  constructor(
<#
      if (smartApp.Languages.AsEnumerable() != null && smartApp.Languages.AsEnumerable().Count() > 0)
      {
#>
    public _translateService: TranslateService,
<#
      }
#>
<#
      if (_isMenu)
      {
#>
    public _events: Events,
<#
      }
#>
    public _platform: Platform,
    public _statusBar: StatusBar,
    public _splashScreen: SplashScreen,
    public _title: Title
   ) {
    this._platform.ready().then(() => {
      this._statusBar.styleDefault();
      this._splashScreen.hide();
<#
      if (smartApp.Concerns.AsEnumerable() != null && _rootLayout != null && _rootLayout.Id != null && _rootConcern != null && _rootConcern.Id != null)
      {
        string concern = _rootConcern.Id.ToPascalCase();
        string layout = _rootLayout.Id.ToPascalCase();
        string layoutComponent = concern + layout;
#>
      this._nav.setRoot(<#= layoutComponent #>);
<#
        if (_isMenu)
        {
#>
      this._events.subscribe('menu', (menu => this._menu = menu));
<#
        }
      }

      if (smartApp.Languages.AsEnumerable() != null && smartApp.Languages.AsEnumerable().Count() > 0)
      {
#>
      this._translateService.setDefaultLang('<#= smartApp.Languages[0].Id.ToPascalCase() #>');
      this._translateService.use('<#= smartApp.Languages[0].Id.ToPascalCase() #>');
      this._translateService.get('applicationTitle').subscribe(name => {
        this._title.setTitle(name);
      });
<#
      }
#>
    });
  }

<#
      if (smartApp.Concerns.AsEnumerable() != null)
      {
#>
  /**
   * method: selected.
   * That method enables to change page
   * through the global menu.
   * @param route `string`.
   */
  selected(route: string) {
    this._nav.setRoot(route);
  }
<#
      }
#>
}
<#
    }
#>
